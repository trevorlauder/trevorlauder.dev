---
import "../styles/global.css";
import "@fontsource/inter";
import { SITE_TITLE } from "../consts";

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/rss+xml"
  title={SITE_TITLE}
  href={new URL("rss.xml", Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />

{image && (
  <meta property="og:image" content={new URL(typeof image === 'string' ? image : image.src, Astro.url)} />
)}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />

{image && (
  <meta property="twitter:image" content={new URL(typeof image === 'string' ? image : image.src, Astro.url)} />
)}

<script is:inline>
  try {
    const theme = localStorage.theme;
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
  } catch (e) {}
</script>

<script is:inline>
  (function () {
    var MID = "G-1F9WKFBP24";
    var dnt =
      navigator.doNotTrack === "1" ||
      window.doNotTrack === "1" ||
      navigator.msDoNotTrack === "1";
    function loadGA4() {
      if (window.gtagScriptLoaded) return;
      window.gtagScriptLoaded = true;
      var s = document.createElement("script");
      s.src = "https://www.googletagmanager.com/gtag/js?id=" + MID;
      s.async = true;
      document.head.appendChild(s);
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      window.gtag = gtag;
      gtag("js", new Date());
      gtag("config", MID, { anonymize_ip: true });
      gtag("consent", "default", {
        ad_storage: "denied",
        analytics_storage: "granted",
        functionality_storage: "granted",
        security_storage: "granted",
        wait_for_update: 500,
      });
      gtag("set", "ads_data_redaction", true);
      gtag("set", "url_passthrough", false);
      gtag("set", "allow_google_signals", false);
    }
    function shouldLoadGA4() {
      try {
        if (dnt) return false;
        var pref = localStorage.getItem("consent.analytics");
        return pref === "granted";
      } catch (e) {
        return false;
      }
    }
    if (shouldLoadGA4()) {
      loadGA4();
    }
    window.addEventListener("privacyConsentChanged", function (e) {
      if (e && e.detail === "granted") loadGA4();
    });
  })();
</script>
