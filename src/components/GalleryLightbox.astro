---
import { Image } from 'astro:assets';
const { images } = Astro.props;
---

<div
  id="gallery-lightbox"
  class="lightbox text-black dark:text-white"
  style="display:none;position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:1000;overflow:auto;background:rgba(0,0,0,0.85);"
>
  <button
    class="lightbox-close dark:text-gray-200"
    aria-label="Close"
    id="gallery-lightbox-close"
    style="position:absolute;top:1rem;right:2rem;font-size:2rem;background:none;border:none;cursor:pointer;z-index:10;"
  >x</button>

  <div id="gallery-lightbox-images" style="text-align:center;margin-top:3rem;position:relative;background:none;box-shadow:none;">
    {images.map((img, i) => (
      <>
        <div class="lightbox-image-wrapper" id={`lightbox-image-${i}`} style="display:none;"></div>

        <template id={`lightbox-template-${i}`}>
          <Image
            src={img.full}
            alt={img.caption || ''}
            sizes="90vw"
            style="max-width:90vw;max-height:90vh;display:block;margin:0 auto;object-fit:contain;background:none;box-shadow:none;"
          />
          {img.caption && (
            <div class="caption dark:text-gray-200" style="margin:1.5rem auto 0 auto;text-align:center;max-width:90vw;">
              {img.caption}
            </div>
          )}
        </template>
      </>
    ))}
  </div>
</div>

<script is:inline type="module">
  let currentIndex = -1;

  function showLightbox(idx) {
    // Hide all & clear
    document.querySelectorAll('.lightbox-image-wrapper').forEach(el => {
      el.style.display = 'none';
      el.innerHTML = '';
    });

    currentIndex = idx;
    const wrapper = document.getElementById(`lightbox-image-${idx}`);
    const tmpl = document.getElementById(`lightbox-template-${idx}`);

    if (wrapper && tmpl) {
      wrapper.appendChild(tmpl.content.cloneNode(true));
      wrapper.style.display = 'block';
    }

    document.getElementById('gallery-lightbox').style.display = 'block';
  }

  window.showLightbox = showLightbox;

  // Close
  document.getElementById('gallery-lightbox-close').addEventListener('click', () => {
    document.getElementById('gallery-lightbox').style.display = 'none';
    document.querySelectorAll('.lightbox-image-wrapper').forEach(el => {
      el.style.display = 'none';
      el.innerHTML = '';
    });
    currentIndex = -1;
  });

  // Event delegation for .gallery-image-btn
  document.body.addEventListener('click', (e) => {
    const btn = e.target.closest('.gallery-image-btn');
    if (btn) {
      const idx = parseInt(btn.getAttribute('data-gallery-index'));
      if (!isNaN(idx)) showLightbox(idx);
    }
  });

  // Keyboard nav
  document.addEventListener('keydown', (e) => {
    if (document.getElementById('gallery-lightbox').style.display !== 'block') return;
    if (e.key === 'Escape') {
      document.getElementById('gallery-lightbox-close').click();
    } else if (e.key === 'ArrowLeft' && currentIndex > 0) {
      showLightbox(currentIndex - 1);
    } else if (e.key === 'ArrowRight') {
      const max = document.querySelectorAll('.lightbox-image-wrapper').length - 1;
      if (currentIndex < max) showLightbox(currentIndex + 1);
    }
  });
</script>